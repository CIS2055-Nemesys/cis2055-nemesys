@using Microsoft.AspNetCore.Identity;
@using nemesis.Models.Interfaces;
@model nemesis.ViewModels.ReportViewModel
@inject UserManager<IdentityUser> UserManager
@inject IReportRepository ReportRepository

@{
    ViewData["Title"] = "Details";
}
<div class="container">
    <div class="report-headers row">
        <h1 class="report-title">
            @Html.DisplayFor(model => model.Title) <br />
        </h1>
        <h2 class="category">
            Category: @Html.DisplayFor(model => model.Category.Name)
        </h2>
        @if (User.Identity.IsAuthenticated)
        {
            @if (UserManager.GetUserAsync(User).Result.Id != Model.CreatedByUser.Id)
            {
                <!-- Changes based on if the current user has upvoted the report -->
                <form method="post" asp-controller="Reports" asp-action="Vote">
                    <input type="hidden" name="reportId" value="@Model.Id" />
                    <button type="submit" class="btn btn-primary">
                        @if (ReportRepository.HasUpvoted(UserManager.GetUserAsync(User).Result.Id, Model.Id))
                        {
                            <span>Remove Upvote</span>
                        }
                        else
                        {
                            <span>Upvote</span>
                        }
                    </button>
                </form>
            }
            else if (User.Identity.IsAuthenticated && UserManager.GetUserAsync(User).Result.Id == Model.CreatedByUser.Id)
            {
                <a asp-controller="Reports" asp-action="EditReport" asp-route-id="@Model.Id" class="btn btn-secondary">Edit Report</a>
            }

        }
       
    </div>

    <div>
        <hr/>

        <div class="row">
            <img class="col" src="@Model.ImageUrl" alt="Image for @Model.Title" />
        </div>

        <dl class="row">

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Location)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Location)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DateSpotted)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateSpotted)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DateOfReport)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DateOfReport)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.InvestigationId)
            </dt>
            <dd class="col-sm-10">
                @if (Model.InvestigationId != null)
                {
                    <a href="@Url.Action("Investigation", "Reports", new { Id = Model.InvestigationId })">
                        Investigation Details
                    </a>
                }
                else
                {
                    <span>No ongoing investigation</span>
                }
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Upvotes)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Upvotes.Count)
            </dd>
        </dl>
    </div>
    <hr />

    <div class="button-container">
        <a asp-controller="Reports" asp-action="Index" class="btn btn-secondary">Back</a>
        @if (User.Identity.IsAuthenticated)
        {
            @if (Model.InvestigationId == null && User.IsInRole("Investigator"))
            {
                <a asp-controller="Reports" asp-action="CreateInvestigation" asp-route-id="@Model.Id" class="btn btn-secondary">Submit Investigation</a>
            }
            if (UserManager.GetUserAsync(User).Result.Id == Model.CreatedByUser.Id)
            {
                <form method="post" asp-controller="Reports" asp-action="DeleteReport">
                    <input type="hidden" name="reportId" value="@Model.Id" />
                    <button type="submit" class="btn btn-secondary">Delete Report</button>
                </form>
            }
        }
    </div>


</div>
